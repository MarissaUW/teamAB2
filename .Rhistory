rawcrimedata <- read.csv("/Users/marissa/Desktop/INFO201/FINAL PROJECT/data/5yr_Crime_Data.csv", stringsAsFactors = FALSE, header = TRUE)
View(rawcrimedata)
rawmap <- readOGR("/Users/marissa/Desktop/INFO201/SPD_Beats_WGS84")
rawmap <- readOGR("/Users/marissa/Desktop/INFO201/REPOS/teamAB2/data/SPD_Beats_WGS84")
library(httr)
library(data.table)
library(purrr)
library(tidyr)
library(rgdal)
library(tmap)
rawmap <- readOGR("/Users/marissa/Desktop/INFO201/REPOS/teamAB2/data/SPD_Beats_WGS84")
rawcrimedata <- read.csv("/Users/marissa/Desktop/INFO201/REPOS/teamAB2/data/5yr_Crime_Data.csv", stringsAsFactors = FALSE, header = TRUE)
library(lubridate)
library(ggplot2)
library(ggrepel)
rawmap <- readOGR(dsn = "/Users/marissa/Desktop/INFO201/REPOS/teamAB2/data/SPD_Beats_WGS84", layer = "SPD_Beats_WGS84")
plot(rawmap)
View(rawmap)
rawmap@plotOrder
rawmap@polygons
install.packages("rgeos")
install.packages("rgeos")
library(rgeos)
readWKT(rawmap$SPD_Beats_WGS84)
library(maptools)
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
install.packages("sp")
library(sp)
library(jsonlite)
library(dplyr)
library(httr)
library(data.table)
library(purrr)
library(tidyr)
library(rgdal)
library(tmap)
library(lubridate)
library(ggplot2)
library(ggrepel)
library(rgeos)
library(maptools)
library(sp)
library(ggmap)
library(magrittr)
library(tibble)
library(GISTools)
library(gghighlight)
library(anytime)
test_calldata <- sample_n(rawcalldata, 200)
#=====================================call data
rawcalldata <- read.csv("/Users/marissa/Desktop/INFO201/FINAL PROJECT/data/5yr_Call_Data.csv", stringsAsFactors = FALSE, header = TRUE)
test_calldata <- sample_n(rawcalldata, 200)
#calldata <- Freq of call by initial/final type == call_init/call_fin
#=====================================crime data
rawcrimedata <- read.csv("/Users/marissa/Desktop/INFO201/REPOS/teamAB2/data/5yr_Crime_Data.csv", stringsAsFactors = FALSE, header = TRUE)
test_crimedata <- sample_n(rawcrimedata, 200)
#crimedata <- Freq of crime/neighborhood == crime_neighborhoods
#=====================================beat map data
rawbeatmap <- readOGR(dsn = "/Users/marissa/Desktop/INFO201/REPOS/teamAB2/data/SPD_Beats_WGS84", layer = "SPD_Beats_WGS84")
#Coordinate reference systems
###crswgs84 <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
#change to correct projection
rawbeatmap <- spTransform(rawbeatmap, CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
#=====================================neigborhood map data
rawhoodsmap <- readOGR(dsn = "/Users/marissa/Desktop/INFO201/REPOS/teamAB2/data/Neighborhoods/WGS84", layer = "Neighborhoods")
rawhoodsmap <- spTransform(rawhoodsmap, CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
##=====================================Seattle basemap
basemap1 <- get_googlemap(center = c(lon = -122.335167, lat = 47.608013), zoom = 11, size = c(640, 640), scale = 2, format = c("png8"), maptype = c("roadmap"), language = "en-EN", sensor = FALSE, messaging = FALSE, urlonly = FALSE, filename = "map1", key = "AIzaSyBroQqyt7YAZC56CG3-EnRbmvCivDrh-pI")
#Coordinate reference systems
###crswgs84 <- CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0")
#change to correct projection
rawbeatmap <- spTransform(rawbeatmap, CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
rawhoodsmap <- spTransform(rawhoodsmap, CRS("+proj=longlat +datum=WGS84 +no_defs +ellps=WGS84 +towgs84=0,0,0"))
plot(rawhoodsmap)
plot(rawbeatmap)
layer_beatmap <- ggmap(basemap1)+
geom_polygon(data=rawbeatmap, aes(x=long, y=lat, group=group, fill=NA), color = "black", fill="orangered4", size=0.8, alpha = .4)
layer_beatmap
layer_hoodsmap <- ggmap(basemap1)+
geom_polygon(data=rawhoodsmap, aes(x=long, y=lat, group=id, fill=NA), color = "black", fill="orangered4", size=0.5, alpha = .4)
View(rawcrimedata)
View(rawcalldata)
clean_calldata <- tbl_df(rawcalldata)
View(clean_calldata)
clean_calldata$CAD.Event.Number <- NULL
clean_calldata <- clean_calldata %>%
filter(!Priority > "5")
clean_calldata <- clean_calldata %>%
filter(!Event.Clearance.Description == "(NOT CURRENTLY USED) ALARM NO RESPONSE")
clean_calldata <- clean_calldata %>%
filter(!Event.Clearance.Description == "DUPLICATED OR CANCELLED BY RADIO")
EventCleared <- clean_calldata %>%
group_by(Event.Clearance.Description) %>%
tally()
View(EventCleared)
clean_calldata <- clean_calldata %>%
filter(!Event.Clearance.Description == "NO SUCH ADDRESS OR LOCATION")
clean_calldata <- clean_calldata %>%
filter(!Event.Clearance.Description == "EXTRA UNIT")
clean_calldata <- clean_calldata %>%
filter(!Event.Clearance.Description == "NON-CRIMINAL REFERRAL")
clean_calldata <- clean_calldata %>%
filter(!Event.Clearance.Description == "SERVICE OF DVPA ORDER")
clean_calldata <- clean_calldata %>%
filter(!Event.Clearance.Description == "TRANSPORTATION OR ESCORT PROVIDED")
clean_calldata <- clean_calldata %>%
filter(!Event.Clearance.Description == "RADIO BROADCAST AND CLEAR")
View(EventCleared)
EventCleared <- clean_calldata %>%
group_by(Event.Clearance.Description) %>%
tally()
class(clean_calldata)
names(clean_calldata)
clean_calldata[c(6,10,2,3,4,5,1)]
View(clean_calldata)
clean_calldata <- clean_calldata[c(6,10,2,3,4,5,1)]
View(clean_calldata)
saveRDS(clean_calldata, file = "clean_calldata.Rda")
save(clean_calldata, file = "clean_calldata.csv")
fwrite(clean_calldata, "clean_calldata.csv")
clean_calldataDT <- strsplit(clean_calldata$Original.Time.Queued, " ")
View(EventCleared)
View(clean_calldataDT)
clean_calldata$DT <- strsplit(clean_calldata$Original.Time.Queued, " ")
x <- matrix(unlist(clean_calldata$DT), ncol = 3, byrow = TRUE)
dat <- as.data.frame(x)
x <- as.data.frame(x)
rm(dat)
View(x)
colnames(x) <- c("Date", "Time", "AM/PM")
clean_calldataDT <- cbind(clean_calldataDT, x)
View(clean_calldataDT)
View(x)
clean_calldataDT <- as.data.frame(clean_calldataDT)
p <- matrix(unlist(clean_calldataDT))
p <- as.data.frame(p)
View(p)
rm(p)
test <- cbind(clean_calldata, x)
View(test_calldata)
View(test)
clean_calldata <- cbind(clean_calldata, x)
clean_calldata$DT <- NULL
test2 <- paste(clean_calldata$Time, clean_calldata$`AM/PM`)
clean_calldata$Time <- paste(clean_calldata$Time, clean_calldata$`AM/PM`)
clean_calldata$Time <- format(strptime(clean_calldata$Time, "%I:%M:%S %p"), format="%H%M")
glimpse
glimpse(clean_calldata)
clean_calldata$Date <- as.POSIXct(clean_calldata$Date, format="%m,%d,%Y")
clean_calldata <- cbind(clean_calldata, x$Date)
calldata_clean$Date <- NULL
clean_calldata$Date <- NULL
clean_calldata$Date <- clean_calldata$`x$Date`
clean_calldata$`x$Date` <- NULL
glimpse(clean_calldata)
glimpse(clean_calldataDT)
View(test)
glimpse(test)
test$Date <- as.Date(test$Date)
View(x)
glimpse(x)
x$date2 <- as.Date(x$Date,format = "%m/%d/%Y"))
x$date2 <- as.Date(x$Date, format = "%m/%d/%Y")
glimpse(x)
x$date3 <- as.Date(x$Date, format = "%m/%d/%Y") "%m/%d/%Y")
format(x$date2, format="%m/%d/%Y")
x$date3 <- format(x$date2, format="%m/%d/%Y")
clean_calldata$Date <- as.Date(clean_calldata$Date, format="%m/%d/%Y")
View(test)
names(clean_calldata)
saveRDS(clean_calldata, file = "clean_calldata.rda")
clean_calldata <- clean_calldata[c(10,8,2,3,4,5,6,7)]
saveRDS(clean_calldata, file = "clean_calldata.rda")
fwrite(clean_calldata, "clean_calldata.csv")
glimpse(clean_calldata)
x$time2 <- paste(x$Time, x$`AM/PM`)
x$time2 <- format(strptime(x$time2, "%I:%M:%S %p"), format="%H%M")
glimpse(x)
x$time3 <- as.numeric(x$time2)
x$time4 <- strptime(x$time2=time, format="%H:%M")
x$time4 <- strptime(x$time2, format="%H:%M")
View(test)
test$datetime <- as.POSIXct(test$Original.Time.Queued, format="%Y/%m/%d %I:%M:%S %p")
glimpse(test)
test$datetime <- as.POSIXct(test$Original.Time.Queued, format="%Y/%m/%d %I:%M:%S %p", string.as.factors=FALSE)
test$datetime <- as.POSIXlt(test$Original.Time.Queued, format="%Y/%m/%d %I:%M:%S %p")
test$datetime <- as.POSIXct(strptime(test$Original.Time.Queued, format="%Y/%m/%d %I:%M:%S %p"))
library(lubridate)
test$datetime2 <- ymd_hm(test$Original.Time.Queued)
test$datetime <- as.POSIXct(test$Original.Time.Queued)
test$datetime <- as.POSIXct(strptime(test$Original.Time.Queued, "%m/%d/%Y %I:%M:%S %p")
test$datetime <- as.POSIXct(strptime(test$Original.Time.Queued, "%m/%d/%Y %I:%M:%S %p"))
test$datetime <- as.POSIXct(strptime(test$Original.Time.Queued, "%m/%d/%Y %I:%M:%S"))
clean_calldata <- cbind(clean_calldata, test$Original.Time.Queued)
View(clean_calldata)
clean_calldata$DateTime <- as.POSIXct(strptime(clean_calldata$test$Original.Time.Queued, "%m/%d/%Y %I:%M:%S"))
clean_calldata$DateTime <- as.POSIXct(strptime(test$Original.Time.Queued, "%m/%d/%Y %I:%M:%S"))
View(clean_calldata)
glimpse(clean_calldata)
clean_calldata <- clean_calldata[c(10,1,3,4,5,6,7)]
View(clean_calldata)
clean_calldata$event.cleared <- test$Event.Clearance.Description
names(clean_calldata)
clean_calldata$Event.Cleared <- clean_calldata$event.cleared
saveRDS(clean_calldata, file = "clean_calldata.rda")
fwrite(clean_calldata, "clean_calldata.csv")
clean_calldata$event.cleared <- NULL
View(clean_calldata)
saveRDS(clean_calldata, file = "clean_calldata.rda")
fwrite(clean_calldata, "clean_calldata.csv")
#=====================================call data
rawincidentdata <- read.csv("/Users/marissa/Downloads/Seattle_Police_Department_911_Incident_Response.csv")
View(rawincidentdata)
names(rawincidentdata)
filtered_incident <- rawincidentdata[c(8,15,16,18,17,5,7,6)]
View(filtered_incident)
glimpse(filtered_incident)
class(filtered_incident)
filtered_incident <- tbl_df(filtered_incident)
filtered_incident <- filter(filtered_incident, Event.Clearance.Date>"01/01/2012 01:00:00 AM")
filtered_incident <- rawincidentdata[c(8,15,16,18,17,5,7,6)]
filtered_incident <- tbl_df(filtered_incident)
View(filtered_incident)
filtered_incident$DateTimeClear <- as.POSIXct(strptime(filtered_incident$Event.Clearance.Date, "%m/%d/%Y %I:%M:%S"))
filtered_incident <- filter(filtered_incident, DateTimeClear>"01/01/2012 01:00:00 AM")
View(filtered_incident)
filtered_incident <- rawincidentdata[c(8,15,16,18,17,5,7,6)]
filtered_incident <- tbl_df(filtered_incident)
filtered_incident$DateTimeClear <- as.POSIXct(strptime(filtered_incident$Event.Clearance.Date, "%m/%d/%Y %I:%M:%S"))
names(filtered_incident)
filtered_incident <- filtered_incident[c(9,2,3,4,5,6,7,8)]
saveRDS(filtered_incident, file = "filtered_incident.Rda")
x <- separate(filtered_incident$Incident.Location, coordinates, into = c("long", "lat"), sep = ",")
x <- unlist(filtered_incident$Incident.Location)
lon <- x[seq(1,length(x),2)]
lat <- x[seq(1,length(x),2)]
head(lon)
glimpse(filtered_incident)
x <- strsplit(filtered_incident$Incident.Location, ",")
sapply(filtered_incident,class)
saveRDS(filtered_incident, file = "filtered_incident.Rda")
rawcalldata2017 <- rawcalldata %>%
filter(DateTimeClear >= as.POSIXct("2017-01-01") & DateTimeClear <= as.POSIXct("2017-12-31"))
rm(lat)
rm(lon)
rm(test2)
rm(x)
#call data subs
calldata_2018 <- clean_calldata[clean_calldata$DateTime >= "2018-01-01 00:00:00", ]
View(calldata_2018)
#call data subs
calldata_2018 <- clean_calldata[clean_calldata$Date >= "2018-01-01", ]
View(calldata_2018)
fi <- filtered_incident
fi$Year <- format(fi$DateTimeClear, "%Y")
View(fi)
View(test)
clean_calldata$QDT <- test$Original.Time.Queued)
lat <- filtered_incident$Incident.Location %>%
gsub("[()]", "", .) %>%
strsplit(" ") %>%
sapply("[", 1])
lat <- filtered_incident$Incident.Location %>%
gsub("[()]", "", .) %>%
strsplit(" ") %>%
sapply("[", 1)
lat <- filtered_incident$Incident.Location %>%
gsub("[()]", "", .) %>%
strsplit(" ") %>%
sapply("[", 1))
lat <- filtered_incident$Incident.Location %>%
gsub("[()]", "", .) %>%
strsplit(" ") %>%
sapply("[", 1)
head(lat)
filtered_incident$lat <- filtered_incident$Incident.Location %>%
gsub("[()]", "", .) %>%
strsplit(" ") %>%
sapply("[", 1)
View(filtered_incident)
filtered_incident$lat <- filtered_incident$Incident.Location %>%
gsub("[()]", "", .) %>%
strsplit(", ") %>%
sapply("[", 1)
View(filtered_incident)
filtered_incident$long <- filtered_incident$Incident.Location %>%
gsub("[()]", "", .) %>%
strsplit(", ") %>%
sapply("[", 1)
filtered_incident$long <- filtered_incident$Incident.Location %>%
gsub("[()]", "", .) %>%
strsplit(", ") %>%
sapply("[", 2)
clean_calldata$QDT <- test$Original.Time.Queued
View(clean_calldata)
sapply(clean_calldata, class)
glimpse(test)
test$datetime <- as.POSIXct(test$Original.Time.Queued, format="%m/%d/%Y %I:%M:%S %p")
test$datetime <- dmy_hms(test$Original.Time.Queued)
View(test_crimedata)
View(test_calldata)
glimpse(test_calldata)
test_calldata$x <- strptime(test_calldata$Original.Time.Queued)
test_calldata$x <- strptime(test_calldata$Original.Time.Queued, format = "%m/%d/%Y %I:%M:%S %p")
glimpse(test_calldata)
clean_calldata$DateTime <- NULL
clean_calldata$DateTime <- strptime(clean_calldata$QDT, format = "%m/%d/%Y %I:%M:%S %p")
View(clean_calldata)
names(clean_calldata)
clean_calldata <- clean_calldata[c(9,1,2,3,4,5,6,7)]
clean_calldata$Date <- NULL
saveRDS(filtered_incident, file = "filtered_incident.Rda")
View(filtered_incident)
names(filtered_incident)
glimpse(filtered_incident)
View(test_calldata)
View(fi)
View(filtered_incident)
clean_calldata$Year <- format(clean_calldata$DateTime, "%Y")
View(clean_calldata)
clean_calldata$Time <- format(clean_calldata$DateTime, "%T")
clean_calldata$Month <- format(clean_calldata$DateTime, "%b")
clean_calldata$Day <- format(clean_calldata$DateTime, "%a")
filtered_incident$Year <- format(filtered_incident$DateTimeClear, "%Y")
filtered_incident$Month <- format(filtered_incident$DateTimeClear, "%b")
filtered_incident$Day <- format(filtered_incident$DateTimeClear, "%a")
filtered_incident$Time <- format(filtered_incident$DateTimeClear, "%T")
load("filtered_incident.Rda")
View(fi)
View(filtered_incident)
fi <- rawincidentdata[c(8,15,16,18,17,5,7,6)]
View(fi)
filtered_incident$DateTimeClear <- fi$Event.Clearance.Date
filtered_incident$DateTimeClear <- strptime(filtered_incident$DateTimeClear, "%m/%d/%Y %I:%M:%S p")
filtered_incident$DateTimeClear <- fi$Event.Clearance.Date
fi$x <- strptime(fi$Event.Clearance.Date, format = "%m/%d/%Y %I:%M:%S %p")
glimpse(filtered_incident)
glimpse(fi)
filtered_incident$DateTimeClear <- strptime(filtered_incident$DateTimeClear, "%m/%d/%Y %I:%M:%S %p")
saveRDS(filtered_incident, file = "filtered_incident.Rda")
saveRDS(clean_calldata, file = "clean_calldata.Rda")
#!/usr/bin/env Rscript
###
### Create a shiny app for displaying the towers
###
source(file.path(Sys.getenv("HOME"), "projects", "afbiz", "code", "conf.R"))
